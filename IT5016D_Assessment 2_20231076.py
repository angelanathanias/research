# -*- coding: utf-8 -*-
"""IT5016D_Assessment 2_20231076

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/18NSOmekJ6auiHfhftrPTHEW0raV_UJrQ
"""

class Ticket:
    ticket_counter = 2000
    tickets = []

    def __init__(self, creator_name, staff_id, contact_email, description):
        self.ticket_number = Ticket.ticket_counter
        Ticket.ticket_counter += 1
        self.creator_name = creator_name
        self.staff_id = staff_id
        self.contact_email = contact_email
        self.description = description
        self.response = "Not Yet Provided"
        self.status = "Open"
        Ticket.tickets.append(self)

    def respond_to_ticket(self, response):
        self.response = response
        self.status = "Closed"

    def __str__(self):
        return (f"Ticket Number: {self.ticket_number}\n"
                f"Ticket Creator: {self.creator_name}\n"
                f"Staff ID: {self.staff_id}\n"
                f"Email Address: {self.contact_email}\n"
                f"Description: {self.description}\n"
                f"Response: {self.response}\n"
                f"Ticket Status: {self.status}\n")

    @staticmethod
    def ticket_stats():
        total_tickets = len(Ticket.tickets)
        resolved_tickets = sum(1 for ticket in Ticket.tickets if ticket.status == "Closed")
        open_tickets = total_tickets - resolved_tickets
        return total_tickets, resolved_tickets, open_tickets


def submit_ticket():
    creator_name = input("Enter your name: ")
    first_three_characters = creator_name[:3]
    staff_id = input("Enter your staff ID: ")
    first_two_characters = staff_id[:2]
    contact_email = input("Enter your contact email: ")
    print("If you require to change password, type : PASSWORD CHANGE")
    choice = (input("Enter your issue: "))
    if choice.lower() == "password change":
      new_password = print("Your new password is:", (first_two_characters + first_three_characters))
      problem = input("Do you have another problem to submit? (Y/N)")

      if problem == "Y":
        submit_ticket()
      else:
       main()

    description = input("Enter the description of the issue: ")
    ticket = Ticket(creator_name, staff_id, contact_email, description)
    print("Ticket submitted successfully!")
    main()


def show_all_tickets():
    for ticket in Ticket.tickets:
        print(ticket)


def respond_to_ticket():
    ticket_number = int(input("Enter the ticket number you want to respond to: "))
    response = input("Enter your response: ")
    for ticket in Ticket.tickets:
        if ticket.ticket_number == ticket_number:
            ticket.respond_to_ticket(response)
            print("Response added successfully!")


def reopen_ticket():
    ticket_number = int(input("Enter the ticket number you want to reopen: "))
    for ticket in Ticket.tickets:
        if ticket.ticket_number == ticket_number:
            ticket.status = "Open"
            print("Ticket reopened successfully!")


def display_ticket_stats():
    total, resolved, open = Ticket.ticket_stats()
    print(f"Displaying Ticket Statistics\nTickets Created: {total}\nTickets Resolved: {resolved}\nTickets To Solve: {open}\n")


def main():
    print("IT5016D Help Desk Ticket System")
    print("---------------------------------------")
    print("Select from the following choices:")
    print("0 = Exit")
    print("1 = Submit Helpdesk Ticket")
    print("2 = Show all tickets")
    print("3 = Respond to ticket by number")
    print("4 = Re-open received ticket")
    print("5 = Display ticket stats")
    print("---------------------------------------")

    while True:
        choice = input("Enter your choice: ")

        if choice == "0":
            print("Exiting Help Desk Ticket System.")
            break
        elif choice == "1":
            submit_ticket()
        elif choice == "2":
            show_all_tickets()
        elif choice == "3":
            respond_to_ticket()
        elif choice == "4":
            reopen_ticket()
        elif choice == "5":
            display_ticket_stats()
        else:
            print("Invalid choice. Please select a valid option.")


if __name__ == "__main__":
    main()